name: Build and Publish Multi-Arch Docker Image

on:
  push:
    branches:
      - main-java
      - main
      - release-*
  release:
    types:
      - created

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: respondnow-portal

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up environment
        run: |
          if [ "${{ github.event_name }}" == "release" ]; then
            IMAGE_TAG=${{ github.event.release.tag_name }}
          else
            BRANCH_NAME=${GITHUB_REF#refs/heads/}
            if [ "$BRANCH_NAME" == "$GITHUB_REF" ]; then
              BRANCH_NAME=${GITHUB_REF#refs/tags/}
            fi
            IMAGE_TAG=${BRANCH_NAME:-latest}
          fi
          echo "IMAGE_TAG=${IMAGE_TAG}" >> $GITHUB_ENV

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          install: true

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 16

      - name: Cache Node.js dependencies
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install and build with Yarn
        run: |
          cd portal && yarn install && yarn build

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_PAT }}

      - name: Create and bootstrap multi-arch builder
        run: |
          docker buildx create --use --name multi-arch-builder
          docker buildx inspect --bootstrap

      - name: Build and push multi-arch Docker image
        if: |
          github.ref == 'refs/heads/main-java' ||
          startsWith(github.ref, 'refs/heads/release-') ||
          github.event_name == 'release'
        run: |
          cd portal
          docker buildx build \
            --platform linux/amd64,linux/arm64,linux/arm/v7 \
            --push \
            -t ${{ env.REGISTRY }}/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }} \
            -f Dockerfile .

      - name: Post success message
        run: echo "Multi-arch Docker image ${{ env.REGISTRY }}/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }} successfully built and pushed to GitHub Container Registry"
